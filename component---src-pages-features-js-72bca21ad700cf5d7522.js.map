{"version":3,"sources":["webpack:///./src/pages/features.js","webpack:///./src/components/Card.js"],"names":["features","require","FeaturesWrapper","styled","CardList","FeatureContainer","Card","measurements","padding","container","colors","primary","FeaturesPage","children","location","map","id","title","desc","icon","key","getIconSvg","baseColor","Title","h3","fonts","sizes","unit","opacities","Info","p","secondary","div","border","card","shadows","box","transitions","set"],"mappings":"6FAAA,oHAYQA,EAAaC,EAAQ,QAArBD,SAEFE,EAAkBC,YAAOC,KAAV,gFAAGD,CAAH,kCAKfE,EAAmBF,YAAOG,KAAV,iFAAGH,CAAH,2HAGVI,IAAaC,QAAQC,UACJF,IAAaC,QAAQC,UAIpCC,IAAOC,QACD,IAAO,IAmBZC,UAfM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACnB,kBAAC,IAAD,CAAQD,SAAUA,EAAUC,SAAUA,GACpC,kBAACZ,EAAD,KACGF,EAASe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,KAApB,OACZ,kBAACd,EAAD,CAAkBe,IAAKJ,GACpBK,YAAWF,GACZ,kBAAC,IAAD,CAASG,UAAWZ,IAAOC,UAC3B,kBAAC,IAAD,KAAQM,GACR,kBAAC,IAAD,KAAOC,W,kCCxCjB,gGAIaK,EAAQpB,IAAOqB,GAAV,kEAAGrB,CAAH,qFACN,IACGsB,IAAMC,MAAM,IAERnB,IAAaoB,KAAQjB,IAAOC,QAClCiB,IAAUjB,SAGVkB,EAAO1B,IAAO2B,EAAV,iEAAG3B,CAAH,2DAEFsB,IAAMC,MAAM,IAEdE,IAAUG,WAGjBzB,EAAOH,IAAO6B,IAAV,2DAAG7B,CAAH,6HAIGI,IAAaC,QAAQC,UACfF,IAAa0B,OAAOC,KACvBxB,IAAOqB,UACnBI,IAAQC,IAAI,GACZC,IAAYC,IAAI,cAGdH,IAAQC,IAAI,IAIH9B","file":"component---src-pages-features-js-72bca21ad700cf5d7522.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout/layout';\n\nimport CardList from '../components/CardList';\nimport Card, { Title, Info } from '../components/Card';\nimport Divider from '../components/Divider';\n\nimport { getIconSvg } from '../data/icons.svg';\nimport { measurements, colors } from '../data/values.css';\n\nconst { features } = require('../data/config.json');\n\nconst FeaturesWrapper = styled(CardList)`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst FeatureContainer = styled(Card)`\n  flex: 1 0 auto;\n  overflow: auto;\n  margin: ${measurements.padding.container};\n  max-width: calc(100vw - (${measurements.padding.container} * 4));\n\n  svg {\n    width: 4em;\n    stroke: ${colors.primary};\n    stroke-width: ${0.25 / 16}em;\n  }\n`;\n\nconst FeaturesPage = ({ children, location }) => (\n  <Layout children={children} location={location}>\n    <FeaturesWrapper>\n      {features.map(({ id, title, desc, icon }) => (\n        <FeatureContainer key={id}>\n          {getIconSvg(icon)}\n          <Divider baseColor={colors.primary} />\n          <Title>{title}</Title>\n          <Info>{desc}</Info>\n        </FeatureContainer>\n      ))}\n    </FeaturesWrapper>\n  </Layout>\n);\n\nexport default FeaturesPage;\n","import styled from 'styled-components';\n\nimport { measurements, colors, opacities, fonts, shadows, transitions } from '../data/values.css';\n\nexport const Title = styled.h3`\n  margin: ${4 / 16}em 0;\n  font-size: ${fonts.sizes[18]};\n  font-weight: bold;\n  text-shadow: 0 ${measurements.unit} ${colors.primary};\n  opacity: ${opacities.primary};\n`;\n\nexport const Info = styled.p`\n  margin: 0;\n  font-size: ${fonts.sizes[14]};\n  font-weight: normal;\n  opacity: ${opacities.secondary};\n`;\n\nconst Card = styled.div`\n  position: relative;\n  display: inline-block;\n  overflow: hidden;\n  padding: ${measurements.padding.container};\n  border-radius: ${measurements.border.card};\n  background: ${colors.secondary};\n  ${shadows.box[2]}\n  ${transitions.set('box-shadow')};\n\n  &:hover {\n    ${shadows.box[4]}\n  }\n`;\n\nexport default Card;\n"],"sourceRoot":""}