{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/react-transition-group/node_modules/dom-helpers/esm/removeClass.js","webpack:///./node_modules/react-transition-group/esm/config.js","webpack:///./node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack:///./node_modules/react-transition-group/esm/Transition.js","webpack:///./node_modules/react-transition-group/esm/CSSTransition.js","webpack:///./node_modules/react-transition-group/node_modules/dom-helpers/esm/addClass.js","webpack:///./node_modules/react-transition-group/node_modules/dom-helpers/esm/hasClass.js","webpack:///./node_modules/react-transition-group/esm/utils/ChildMapping.js","webpack:///./node_modules/react-transition-group/esm/TransitionGroup.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/components/CardList.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","replaceClassName","origClass","classToRemove","replace","RegExp","createContext","_React$Component","Transition","props","context","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","createElement","TransitionGroupContext","Provider","value","cloneElement","Children","only","Component","noop","contextType","defaultProps","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","classes","split","forEach","c","className","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","args","Array","_key","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","done","getChildMapping","mapFn","result","create","map","child","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","bind","values","obj","k","TransitionGroup","handleExited","self","ReferenceError","_assertThisInitialized","contextValue","firstRender","mounted","currentChildMapping","component","childFactory","timeoutFactor","transitions","duration","transitionStyle","css","timingFunction","index","LiftTransition","styled","attrs","measurements","height","header","CardList"],"mappings":"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","file":"96288a99686fb05eb5dc6b87a6165c44a74254a1-c53b41148fd8ff156eff.js","sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\n\n// Name the function so it is clearer in the documentation\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nexport default CSSTransition;","import hasClass from './hasClass';\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","export default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React, { Children } from 'react';\nimport { oneOfType, arrayOf, node } from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport styled, { css } from 'styled-components';\n\nimport { measurements, transitions } from '../data/values.css';\n\nconst classNames = 'lift-transition';\nconst timeoutFactor = transitions.duration * 1000;\n\nconst transitionStyle = css`\n  transition-property: opacity, transform;\n  transition-duration: ${({ timeout }) => `${(timeout / timeoutFactor) * 100}ms`};\n  transition-timing-function: ${transitions.timingFunction};\n  transition-delay: ${({ index = 0 }) => `${index * (timeoutFactor / 2)}ms`};\n`;\n\n// FIXME: Allow transition to enter and exit when component mounted and unmounted\nconst LiftTransition = styled(CSSTransition).attrs(({ classNames, timeout }) => ({\n  classNames,\n  timeout: timeout || timeoutFactor,\n}))`\n  &.${classNames} {\n    &-appear {\n      transform: translateY(${measurements.height.header});\n      opacity: 0;\n\n      &&-active {\n      transform: translateY(0);\n      opacity: 1;\n      ${transitionStyle};\n    }\n\n    &-enter {\n      transform: translateY(${measurements.height.header});\n      opacity: 0.1;\n\n      &&-active {\n      transform: translateY(0);\n      opacity: 1;\n      ${transitionStyle};\n    }\n\n    &-exit {\n      transform: translateY(0);\n      opacity: 1;\n\n      &&-active {\n      transform: translateY(${measurements.height.header});\n      opacity: 0.1;\n      ${transitionStyle};\n    }\n  }\n`;\n\n// FIXME: Not working well with videos\nconst CardList = ({ children, ...props }) => (\n  <TransitionGroup appear {...props}>\n    {Children.map(children, (child, i) => (\n      <LiftTransition key={child.key || i} timeout={children.length * timeoutFactor} index={i}>\n        {child}\n      </LiftTransition>\n    ))}\n  </TransitionGroup>\n);\n\nCardList.propTypes = {\n  children: oneOfType([node, arrayOf(node)]).isRequired,\n};\n\nexport default CardList;\n"],"sourceRoot":""}